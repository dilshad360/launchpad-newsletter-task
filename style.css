*{
    margin: 0;
    padding: 0;
    position: border-box;

}

body{
    display: flex;
    background-color: black;
    background: url(/assets/background.jpg) top center;
    background-size: cover;
    width: 100%;
    background-repeat: no-repeat;
    color: white;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 2rem 0 2rem 0;
    font-family: 'Open Sans', sans-serif;
}

.mainlogo{
    width: 200px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    padding-bottom: 1em;
}

.container{
    background-color: rgba(255, 68, 0, 0.2);
    width: 80%;
    border-radius: 1rem;
    backdrop-filter: blur(10px); 
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    
    padding: 2rem 2rem 0 2rem;
}

.subheading{
    padding-top: 1rem;
    font-weight: bold;
    font-size: 2em;
}

.centerHeading{
    text-align: center;
}

.footerLogo{
    width: 80px;
    margin-top: 10px;
}

.updates{
    padding-top: 2rem;
}

button{
    background-color: orangered;
    color: white;
    padding: 10px 20px ;
    font-size: 16px;
    font-weight: bold;
    border: 2px solid white;
    border-radius: 10px;
    margin: 1em 0;
}

button:hover{
    background-color: tomato;
}



/* Timeline Container */
.timeline {
    background: var(--primary-color);
    margin: 20px auto;
    padding: 20px;
    display: flex;
    justify-content: center;
  }
  
  /* Card container */
  .card {
    position: relative;
    max-width: 400px;
  }
  
  /* setting padding based on even or odd */
  .card:nth-child(odd) {
    padding: 30px 0 30px 30px;
  }
  .card:nth-child(even) {
    padding: 30px 30px 30px 0;
  }
  /* Global ::before */
  .card::before {
    content: "";
    position: absolute;
    width: 50%;
    border: solid orangered;
  }
  
  /* Setting the border of top, bottom, left */
  .card:nth-child(odd)::before {
    left: 0px;
    top: -4.5px;
    bottom: -4.5px;
    border-width: 5px 0 5px 5px;
    border-radius: 50px 0 0 50px;
  }
  
  /* Setting the top and bottom to "-5px" because earlier it was out of a pixel in mobile devices */
  @media only screen and (max-width: 400px) {
    .card:nth-child(odd)::before {
      top: -5px;
      bottom: -5px;
    }
  }
  
  /* Setting the border of top, bottom, right */
  .card:nth-child(even)::before {
    right: 0;
    top: 0;
    bottom: 0;
    border-width: 5px 5px 5px 0;
    border-radius: 0 50px 50px 0;
  }
  
  /* Removing the border if it is the first card */
  .card:first-child::before {
    border-top: 0;
    border-top-left-radius: 0;
  }
  
  /* Removing the border if it is the last card  and it's odd */
  .card:last-child:nth-child(odd)::before {
    border-bottom: 0;
    border-bottom-left-radius: 0;
  }
  
  /* Removing the border if it is the last card  and it's even */
  .card:last-child:nth-child(even)::before {
    border-bottom: 0;
    border-bottom-right-radius: 0;
  }
  
  /* Information about the timeline */
  .info {
    display: flex;
    flex-direction: column;
    background: #333;
    color: gray;
    border-radius: 10px;
    padding: 10px;
  }
  
  /* Title of the card */
  .title {
    color: orangered;
    position: relative;
  }
  
  /* Timeline dot  */
  .title::before {
    content: "";
    position: absolute;
    width: 10px;
    height: 10px;
    background: white;
    border-radius: 999px;
    border: 3px solid orangered;
  }
  
  /* text right if the card is even  */
  .card:nth-child(even) > .info > .title {
    text-align: right;
  }
  
  /* setting dot to the left if the card is odd */
  .card:nth-child(odd) > .info > .title::before {
    left: -45px;
  }
  
  /* setting dot to the right if the card is odd */
  .card:nth-child(even) > .info > .title::before {
    right: -45px;
  }
  

.circle {
    width: 100px;
    height: 100px;
    background: linear-gradient(to bottom right, #3e3e3ea1, #716d6994);
    border-radius: 50%;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    transition: top 0.2s, left 0.2s;
    filter: blur(30px);
    animation: loopMotion 5s ease-in-out infinite ;
}

@keyframes loopMotion {
    0% {
        transform: translate(-50%, -50%) scale(1); 
    }
    50% {
        transform: translate(-50%, -50%) scale(2);
    }
    100% {
        transform: translate(-50%, -50%) scale(1);
    }
}